/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "./common";
import type {
  Marketplace,
  MarketplaceInterface,
} from "./Marketplace";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "subscription",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
    ],
    name: "OrderCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "subscription",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
    ],
    name: "OrderFilled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sub",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
    ],
    name: "buyOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sub",
        type: "address",
      },
    ],
    name: "getOpenOrders",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pricePerToken",
            type: "uint256",
          },
        ],
        internalType: "struct Marketplace.OpenOrder[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSubSelling",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sub",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pricePerToken",
        type: "uint256",
      },
    ],
    name: "registerOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610454806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063049405be146100515780632a0781141461007a5780634a89532b1461008f57806379583e22146100a4575b600080fd5b61006461005f366004610317565b6100b7565b6040516100719190610339565b60405180910390f35b61008d610088366004610388565b61013e565b005b6100976101f4565b60405161007191906103bb565b61008d6100b2366004610388565b610256565b6001600160a01b038116600090815260208181526040808320805482518185028101850190935280835260609492939192909184015b82821015610133578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906100ed565b505050509050919050565b6001805484919061014d610408565b600091825260208083209190910180546001600160a01b0319166001600160a01b039485161790559185168082528183526040808320815180830183528781528086018781528254600181810185559387529587902091516002909602909101948555519301929092558151858152928301849052917fbb4cd350108fec46a02c87acb34a38f6c465fb2dc050687359c97229703bb8f491015b60405180910390a2505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561024c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161022e575b5050505050905090565b6001600160a01b0383166000908152602081905260408120610277916102b8565b60408051838152602081018390526001600160a01b038516917f8da998a3cae2c155d59a1bdac9b6d26464fd268a145a9ef658307a6f0a92b4e691016101e7565b50805460008255600202906000526020600020908101906102d991906102dc565b50565b5b808211156102f757600080825560018201556002016102dd565b5090565b80356001600160a01b038116811461031257600080fd5b919050565b60006020828403121561032957600080fd5b610332826102fb565b9392505050565b602080825282518282018190526000919060409081850190868401855b8281101561037b57815180518552860151868501529284019290850190600101610356565b5091979650505050505050565b60008060006060848603121561039d57600080fd5b6103a6846102fb565b95602085013595506040909401359392505050565b6020808252825182820181905260009190848201906040850190845b818110156103fc5783516001600160a01b0316835292840192918401916001016103d7565b50909695505050505050565b634e487b7160e01b600052603260045260246000fdfea264697066735822122004675121b38024ce2da7b51cc6486c1a730dec48e26e202516343548a730993d64736f6c63430008120033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Marketplace> {
    return super.deploy(overrides || {}) as Promise<Marketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Marketplace {
    return super.attach(address) as Marketplace;
  }
  override connect(signer: Signer): Marketplace__factory {
    return super.connect(signer) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new utils.Interface(_abi) as MarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Marketplace {
    return new Contract(address, _abi, signerOrProvider) as Marketplace;
  }
}
